#ifndef REFLECTCPP_STD_MODULE
module;

#include <algorithm>
#include <array>
#include <atomic>
#include <charconv>
#include <concepts>
#include <cstddef>
#include <cstdint>
#include <ctime>
#include <deque>
#include <exception>
#include <forward_list>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <mutex>
#include <optional>
#include <ostream>
#include <ranges>
#include <regex>
#include <set>
#include <source_location>
#include <span>
#include <sstream>
#include <stdexcept>
#include <string>
#include <string_view>
#include <tuple>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <variant>
#include <vector>

#endif
export module rfl;

#ifdef REFLECTCPP_STD_MODULE
import std;
import std.compat;
#define NULL ((void*)0)
#endif

export {

#define REFLECTCPP_MODULE
#define STATIC
#include "../include/rfl.hpp"
#include "../include/rfl/parsing/schema/make.hpp"

} // <-- export
